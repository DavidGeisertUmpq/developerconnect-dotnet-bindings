/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Loan
 *
 * Returns the entire loan or specific entities of a loan.
 *
 * OpenAPI spec version: 1.4.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Loans.Client.SwaggerDateConverter;

namespace Elli.Api.Loans.Model
{
    /// <summary>
    /// DisclosureTracking2015Contract
    /// </summary>
    [DataContract]
    public partial class DisclosureTracking2015Contract :  IEquatable<DisclosureTracking2015Contract>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Alerts
        /// </summary>
        [DataMember(Name="alerts", EmitDefaultValue=false)]
        public List<DisclosureTracking2015ContractAlerts> Alerts { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerPair
        /// </summary>
        [DataMember(Name="borrowerPair", EmitDefaultValue=false)]
        public EntityRefContract BorrowerPair { get; set; }

        /// <summary>
        /// Gets or Sets CommentList
        /// </summary>
        [DataMember(Name="commentList", EmitDefaultValue=false)]
        public List<DisclosureTracking2015ContractCommentList> CommentList { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets ContainCD
        /// </summary>
        [DataMember(Name="containCD", EmitDefaultValue=false)]
        public bool? ContainCD { get; set; }

        /// <summary>
        /// Gets or Sets ContainLE
        /// </summary>
        [DataMember(Name="containLE", EmitDefaultValue=false)]
        public bool? ContainLE { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedBy
        /// </summary>
        [DataMember(Name="disclosedBy", EmitDefaultValue=false)]
        public EntityRefContract DisclosedBy { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedMethod
        /// </summary>
        [DataMember(Name="disclosedMethod", EmitDefaultValue=false)]
        public string DisclosedMethod { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedMethodOther
        /// </summary>
        [DataMember(Name="disclosedMethodOther", EmitDefaultValue=false)]
        public string DisclosedMethodOther { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureCreatedDate
        /// </summary>
        [DataMember(Name="disclosureCreatedDate", EmitDefaultValue=false)]
        public DateTime? DisclosureCreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets EDisclosure
        /// </summary>
        [DataMember(Name="eDisclosure", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractEDisclosure EDisclosure { get; set; }

        /// <summary>
        /// Gets or Sets Forms
        /// </summary>
        [DataMember(Name="forms", EmitDefaultValue=false)]
        public List<LoanContractForms> Forms { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentOrderedBy
        /// </summary>
        [DataMember(Name="fulfillmentOrderedBy", EmitDefaultValue=false)]
        public EntityRefContract FulfillmentOrderedBy { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentProcessedDate
        /// </summary>
        [DataMember(Name="fulfillmentProcessedDate", EmitDefaultValue=false)]
        public DateTime? FulfillmentProcessedDate { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedAPRField
        /// </summary>
        [DataMember(Name="lockedDisclosedAPRField", EmitDefaultValue=false)]
        public string LockedDisclosedAPRField { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedByField
        /// </summary>
        [DataMember(Name="lockedDisclosedByField", EmitDefaultValue=false)]
        public string LockedDisclosedByField { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedFinanceChargeField
        /// </summary>
        [DataMember(Name="lockedDisclosedFinanceChargeField", EmitDefaultValue=false)]
        public string LockedDisclosedFinanceChargeField { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedReceivedDate
        /// </summary>
        [DataMember(Name="lockedDisclosedReceivedDate", EmitDefaultValue=false)]
        public string LockedDisclosedReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets ReceivedDate
        /// </summary>
        [DataMember(Name="receivedDate", EmitDefaultValue=false)]
        public string ReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureType
        /// </summary>
        [DataMember(Name="disclosureType", EmitDefaultValue=false)]
        public string DisclosureType { get; set; }

        /// <summary>
        /// Gets or Sets LeReason
        /// </summary>
        [DataMember(Name="leReason", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractLeReason LeReason { get; set; }

        /// <summary>
        /// Gets or Sets CdReason
        /// </summary>
        [DataMember(Name="cdReason", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractCdReason CdReason { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInCircumstance
        /// </summary>
        [DataMember(Name="changeInCircumstance", EmitDefaultValue=false)]
        public string ChangeInCircumstance { get; set; }

        /// <summary>
        /// Gets or Sets ChangeInCircumstanceComments
        /// </summary>
        [DataMember(Name="changeInCircumstanceComments", EmitDefaultValue=false)]
        public string ChangeInCircumstanceComments { get; set; }

        /// <summary>
        /// Gets or Sets IntentToProceed
        /// </summary>
        [DataMember(Name="intentToProceed", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractIntentToProceed IntentToProceed { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDisclosedMethod
        /// </summary>
        [DataMember(Name="borrowerDisclosedMethod", EmitDefaultValue=false)]
        public string BorrowerDisclosedMethod { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerDisclosedMethodOther
        /// </summary>
        [DataMember(Name="borrowerDisclosedMethodOther", EmitDefaultValue=false)]
        public string BorrowerDisclosedMethodOther { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerPresumedReceivedDate
        /// </summary>
        [DataMember(Name="borrowerPresumedReceivedDate", EmitDefaultValue=false)]
        public string BorrowerPresumedReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerActualReceivedDate
        /// </summary>
        [DataMember(Name="borrowerActualReceivedDate", EmitDefaultValue=false)]
        public string BorrowerActualReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets CoborrowerDisclosedMethod
        /// </summary>
        [DataMember(Name="coborrowerDisclosedMethod", EmitDefaultValue=false)]
        public string CoborrowerDisclosedMethod { get; set; }

        /// <summary>
        /// Gets or Sets CoborrowerDisclosedMethodOther
        /// </summary>
        [DataMember(Name="coborrowerDisclosedMethodOther", EmitDefaultValue=false)]
        public string CoborrowerDisclosedMethodOther { get; set; }

        /// <summary>
        /// Gets or Sets CoborrowerPresumedReceivedDate
        /// </summary>
        [DataMember(Name="coborrowerPresumedReceivedDate", EmitDefaultValue=false)]
        public string CoborrowerPresumedReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets CoborrowerActualReceivedDate
        /// </summary>
        [DataMember(Name="coborrowerActualReceivedDate", EmitDefaultValue=false)]
        public string CoborrowerActualReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets SnapshotFields
        /// </summary>
        [DataMember(Name="snapshotFields", EmitDefaultValue=false)]
        public EntityRefContract SnapshotFields { get; set; }

        /// <summary>
        /// Gets or Sets BorrowerType
        /// </summary>
        [DataMember(Name="borrowerType", EmitDefaultValue=false)]
        public string BorrowerType { get; set; }

        /// <summary>
        /// Gets or Sets CoborrowerType
        /// </summary>
        [DataMember(Name="coborrowerType", EmitDefaultValue=false)]
        public string CoborrowerType { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationDate
        /// </summary>
        [DataMember(Name="applicationDate", EmitDefaultValue=false)]
        public DateTime? ApplicationDate { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedAPR
        /// </summary>
        [DataMember(Name="disclosedAPR", EmitDefaultValue=false)]
        public string DisclosedAPR { get; set; }

        /// <summary>
        /// Gets or Sets FinanceCharge
        /// </summary>
        [DataMember(Name="financeCharge", EmitDefaultValue=false)]
        public string FinanceCharge { get; set; }

        /// <summary>
        /// Gets or Sets LoanProgram
        /// </summary>
        [DataMember(Name="loanProgram", EmitDefaultValue=false)]
        public string LoanProgram { get; set; }

        /// <summary>
        /// Gets or Sets LoanAmount
        /// </summary>
        [DataMember(Name="loanAmount", EmitDefaultValue=false)]
        public decimal? LoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets PropertyAddress
        /// </summary>
        [DataMember(Name="propertyAddress", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractPropertyAddress PropertyAddress { get; set; }

        /// <summary>
        /// Gets or Sets DateAdded
        /// </summary>
        [DataMember(Name="dateAdded", EmitDefaultValue=false)]
        public DateTime? DateAdded { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedDate
        /// </summary>
        [DataMember(Name="disclosedDate", EmitDefaultValue=false)]
        public string DisclosedDate { get; set; }

        /// <summary>
        /// Gets or Sets DisclosureMethod
        /// </summary>
        [DataMember(Name="disclosureMethod", EmitDefaultValue=false)]
        public string DisclosureMethod { get; set; }

        /// <summary>
        /// Gets or Sets LockedBorrowerPresumedReceivedDate
        /// </summary>
        [DataMember(Name="lockedBorrowerPresumedReceivedDate", EmitDefaultValue=false)]
        public string LockedBorrowerPresumedReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets LockedBorrowerType
        /// </summary>
        [DataMember(Name="lockedBorrowerType", EmitDefaultValue=false)]
        public string LockedBorrowerType { get; set; }

        /// <summary>
        /// Gets or Sets LockedCoborrowerPresumedReceivedDate
        /// </summary>
        [DataMember(Name="lockedCoborrowerPresumedReceivedDate", EmitDefaultValue=false)]
        public string LockedCoborrowerPresumedReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets LockedCoborrowerType
        /// </summary>
        [DataMember(Name="lockedCoborrowerType", EmitDefaultValue=false)]
        public string LockedCoborrowerType { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedMethodName
        /// </summary>
        [DataMember(Name="disclosedMethodName", EmitDefaultValue=false)]
        public string DisclosedMethodName { get; set; }

        /// <summary>
        /// Gets or Sets LenderTotalPaidOriginatorAmount
        /// </summary>
        [DataMember(Name="lenderTotalPaidOriginatorAmount", EmitDefaultValue=false)]
        public decimal? LenderTotalPaidOriginatorAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanPurchaseCredit
        /// </summary>
        [DataMember(Name="loanPurchaseCredit", EmitDefaultValue=false)]
        public List<DisclosureTracking2015ContractLoanPurchaseCredit> LoanPurchaseCredit { get; set; }

        /// <summary>
        /// Gets or Sets LoanClosingCost
        /// </summary>
        [DataMember(Name="loanClosingCost", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractLoanClosingCost LoanClosingCost { get; set; }

        /// <summary>
        /// Gets or Sets LoanEstimate
        /// </summary>
        [DataMember(Name="loanEstimate", EmitDefaultValue=false)]
        public DisclosureTracking2015ContractLoanEstimate LoanEstimate { get; set; }

        /// <summary>
        /// Gets or Sets PurchasePriceAmount
        /// </summary>
        [DataMember(Name="purchasePriceAmount", EmitDefaultValue=false)]
        public decimal? PurchasePriceAmount { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedSalesPrice
        /// </summary>
        [DataMember(Name="disclosedSalesPrice", EmitDefaultValue=false)]
        public string DisclosedSalesPrice { get; set; }

        /// <summary>
        /// Gets or Sets LoanFeesCityTaxBorPaidAmount
        /// </summary>
        [DataMember(Name="loanFeesCityTaxBorPaidAmount", EmitDefaultValue=false)]
        public decimal? LoanFeesCityTaxBorPaidAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanFeesStateTaxBorPaidAmount
        /// </summary>
        [DataMember(Name="loanFeesStateTaxBorPaidAmount", EmitDefaultValue=false)]
        public decimal? LoanFeesStateTaxBorPaidAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanGFEAgregateAdjustment
        /// </summary>
        [DataMember(Name="loanGFEAgregateAdjustment", EmitDefaultValue=false)]
        public decimal? LoanGFEAgregateAdjustment { get; set; }

        /// <summary>
        /// Gets or Sets LoanGFEGovernmentRecordingCharges
        /// </summary>
        [DataMember(Name="loanGFEGovernmentRecordingCharges", EmitDefaultValue=false)]
        public decimal? LoanGFEGovernmentRecordingCharges { get; set; }

        /// <summary>
        /// Gets or Sets LoanSection1000SellerPaidTotalAmount
        /// </summary>
        [DataMember(Name="loanSection1000SellerPaidTotalAmount", EmitDefaultValue=false)]
        public decimal? LoanSection1000SellerPaidTotalAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanAdjustmentsOtherCredits
        /// </summary>
        [DataMember(Name="loanAdjustmentsOtherCredits", EmitDefaultValue=false)]
        public decimal? LoanAdjustmentsOtherCredits { get; set; }

        /// <summary>
        /// Gets or Sets LoanDownPayment
        /// </summary>
        [DataMember(Name="loanDownPayment", EmitDefaultValue=false)]
        public decimal? LoanDownPayment { get; set; }

        /// <summary>
        /// Gets or Sets LoanFundsForBorrower
        /// </summary>
        [DataMember(Name="loanFundsForBorrower", EmitDefaultValue=false)]
        public decimal? LoanFundsForBorrower { get; set; }

        /// <summary>
        /// Gets or Sets LoanLineItemAmount
        /// </summary>
        [DataMember(Name="loanLineItemAmount", EmitDefaultValue=false)]
        public decimal? LoanLineItemAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanRefinanceIncludingDebtsToBePaidOffAmount
        /// </summary>
        [DataMember(Name="loanRefinanceIncludingDebtsToBePaidOffAmount", EmitDefaultValue=false)]
        public decimal? LoanRefinanceIncludingDebtsToBePaidOffAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanSellerCreditAmount
        /// </summary>
        [DataMember(Name="loanSellerCreditAmount", EmitDefaultValue=false)]
        public decimal? LoanSellerCreditAmount { get; set; }

        /// <summary>
        /// Gets or Sets LoanTotalClosingCosts
        /// </summary>
        [DataMember(Name="loanTotalClosingCosts", EmitDefaultValue=false)]
        public decimal? LoanTotalClosingCosts { get; set; }

        /// <summary>
        /// Gets or Sets DisclosedDailyInterest
        /// </summary>
        [DataMember(Name="disclosedDailyInterest", EmitDefaultValue=false)]
        public string DisclosedDailyInterest { get; set; }

        /// <summary>
        /// Gets or Sets AppliedCureAmount
        /// </summary>
        [DataMember(Name="appliedCureAmount", EmitDefaultValue=false)]
        public decimal? AppliedCureAmount { get; set; }

        /// <summary>
        /// Gets or Sets LenderCompensationCreditAmount2
        /// </summary>
        [DataMember(Name="lenderCompensationCreditAmount2", EmitDefaultValue=false)]
        public decimal? LenderCompensationCreditAmount2 { get; set; }

        /// <summary>
        /// Gets or Sets Line802LOCompAdditionalAmount1
        /// </summary>
        [DataMember(Name="line802LOCompAdditionalAmount1", EmitDefaultValue=false)]
        public decimal? Line802LOCompAdditionalAmount1 { get; set; }

        /// <summary>
        /// Gets or Sets Line802LOCompAdditionalAmount2
        /// </summary>
        [DataMember(Name="line802LOCompAdditionalAmount2", EmitDefaultValue=false)]
        public decimal? Line802LOCompAdditionalAmount2 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotDecreaseItemization9
        /// </summary>
        [DataMember(Name="chargesThatCannotDecreaseItemization9", EmitDefaultValue=false)]
        public string ChargesThatCannotDecreaseItemization9 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotIncreaseItemization13
        /// </summary>
        [DataMember(Name="chargesThatCannotIncreaseItemization13", EmitDefaultValue=false)]
        public string ChargesThatCannotIncreaseItemization13 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesCannotIncrease10Itemization34
        /// </summary>
        [DataMember(Name="chargesCannotIncrease10Itemization34", EmitDefaultValue=false)]
        public string ChargesCannotIncrease10Itemization34 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotDecreaseLE7
        /// </summary>
        [DataMember(Name="chargesThatCannotDecreaseLE7", EmitDefaultValue=false)]
        public string ChargesThatCannotDecreaseLE7 { get; set; }

        /// <summary>
        /// Gets or Sets ChargesThatCannotIncreaseLE11
        /// </summary>
        [DataMember(Name="chargesThatCannotIncreaseLE11", EmitDefaultValue=false)]
        public string ChargesThatCannotIncreaseLE11 { get; set; }

        /// <summary>
        /// Gets or Sets ChangesReceivedDate
        /// </summary>
        [DataMember(Name="changesReceivedDate", EmitDefaultValue=false)]
        public string ChangesReceivedDate { get; set; }

        /// <summary>
        /// Gets or Sets RevisedDueDate
        /// </summary>
        [DataMember(Name="revisedDueDate", EmitDefaultValue=false)]
        public string RevisedDueDate { get; set; }

        /// <summary>
        /// Gets or Sets NumberOfDisclosureDocs
        /// </summary>
        [DataMember(Name="numberOfDisclosureDocs", EmitDefaultValue=false)]
        public int? NumberOfDisclosureDocs { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedDateField
        /// </summary>
        [DataMember(Name="lockedDisclosedDateField", EmitDefaultValue=false)]
        public string LockedDisclosedDateField { get; set; }

        /// <summary>
        /// Gets or Sets LockedIntentReceivedByField
        /// </summary>
        [DataMember(Name="lockedIntentReceivedByField", EmitDefaultValue=false)]
        public string LockedIntentReceivedByField { get; set; }

        /// <summary>
        /// Gets or Sets LockedDisclosedDailyInterestField
        /// </summary>
        [DataMember(Name="lockedDisclosedDailyInterestField", EmitDefaultValue=false)]
        public string LockedDisclosedDailyInterestField { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentProcessedDateCoborrower
        /// </summary>
        [DataMember(Name="fulfillmentProcessedDateCoborrower", EmitDefaultValue=false)]
        public DateTime? FulfillmentProcessedDateCoborrower { get; set; }

        /// <summary>
        /// Gets or Sets FulfillmentOrderedByCoborrower
        /// </summary>
        [DataMember(Name="fulfillmentOrderedByCoborrower", EmitDefaultValue=false)]
        public string FulfillmentOrderedByCoborrower { get; set; }

        /// <summary>
        /// Gets or Sets AutomaticFulfillmentServiceName
        /// </summary>
        [DataMember(Name="automaticFulfillmentServiceName", EmitDefaultValue=false)]
        public string AutomaticFulfillmentServiceName { get; set; }

        /// <summary>
        /// Gets or Sets PresumedFulfillmentDate
        /// </summary>
        [DataMember(Name="presumedFulfillmentDate", EmitDefaultValue=false)]
        public string PresumedFulfillmentDate { get; set; }

        /// <summary>
        /// Gets or Sets ActualFulfillmentDate
        /// </summary>
        [DataMember(Name="actualFulfillmentDate", EmitDefaultValue=false)]
        public string ActualFulfillmentDate { get; set; }

        /// <summary>
        /// Gets or Sets CureAppliedToLenderCredit
        /// </summary>
        [DataMember(Name="cureAppliedToLenderCredit", EmitDefaultValue=false)]
        public decimal? CureAppliedToLenderCredit { get; set; }

        /// <summary>
        /// Gets or Sets CureAppliedToPrincipalReduction
        /// </summary>
        [DataMember(Name="cureAppliedToPrincipalReduction", EmitDefaultValue=false)]
        public decimal? CureAppliedToPrincipalReduction { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedDateUtc
        /// </summary>
        [DataMember(Name="updatedDateUtc", EmitDefaultValue=false)]
        public DateTime? UpdatedDateUtc { get; set; }

        /// <summary>
        /// Gets or Sets EdsRequestGuid
        /// </summary>
        [DataMember(Name="edsRequestGuid", EmitDefaultValue=false)]
        public string EdsRequestGuid { get; set; }

        /// <summary>
        /// Gets or Sets LinkedGuid
        /// </summary>
        [DataMember(Name="linkedGuid", EmitDefaultValue=false)]
        public string LinkedGuid { get; set; }

        /// <summary>
        /// Gets or Sets CdDateIssued
        /// </summary>
        [DataMember(Name="cdDateIssued", EmitDefaultValue=false)]
        public string CdDateIssued { get; set; }

        /// <summary>
        /// Gets or Sets ClosingDate
        /// </summary>
        [DataMember(Name="closingDate", EmitDefaultValue=false)]
        public string ClosingDate { get; set; }

        /// <summary>
        /// Gets or Sets ActualLELoanAmountFromLatestRec
        /// </summary>
        [DataMember(Name="actualLELoanAmountFromLatestRec", EmitDefaultValue=false)]
        public string ActualLELoanAmountFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualLECD3TotalClosingCostJFromLatestRec
        /// </summary>
        [DataMember(Name="actualLECD3TotalClosingCostJFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualLECD3TotalClosingCostJFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec
        /// </summary>
        [DataMember(Name="actualLECD3TotalPayoffsAndPaymentsKFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLETotalClosingCostJFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLETotalClosingCostJFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLETotalClosingCostJFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLEClosingCostFinancedFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLEClosingCostFinancedFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLEClosingCostFinancedFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLEDepositFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLEDepositFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLEDepositFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLEFundForBorrowerFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLEFundForBorrowerFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLEFundForBorrowerFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLESellerCreditsFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLESellerCreditsFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLESellerCreditsFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec
        /// </summary>
        [DataMember(Name="actualSTDLEAdjustmentAndOtherCreditsFromLatestRec", EmitDefaultValue=false)]
        public decimal? ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec { get; set; }

        /// <summary>
        /// Gets or Sets StdAdjustmentAndOtherCreditsRemark
        /// </summary>
        [DataMember(Name="stdAdjustmentAndOtherCreditsRemark", EmitDefaultValue=false)]
        public string StdAdjustmentAndOtherCreditsRemark { get; set; }

        /// <summary>
        /// Gets or Sets LogIndicators
        /// </summary>
        [DataMember(Name="logIndicators", EmitDefaultValue=false)]
        public List<string> LogIndicators { get; set; }

        /// <summary>
        /// Gets or Sets LineIndicators
        /// </summary>
        [DataMember(Name="lineIndicators", EmitDefaultValue=false)]
        public List<string> LineIndicators { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DisclosureTracking2015Contract {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Alerts: ").Append(Alerts).Append("\n");
            sb.Append("  BorrowerPair: ").Append(BorrowerPair).Append("\n");
            sb.Append("  CommentList: ").Append(CommentList).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  ContainCD: ").Append(ContainCD).Append("\n");
            sb.Append("  ContainLE: ").Append(ContainLE).Append("\n");
            sb.Append("  DisclosedBy: ").Append(DisclosedBy).Append("\n");
            sb.Append("  DisclosedMethod: ").Append(DisclosedMethod).Append("\n");
            sb.Append("  DisclosedMethodOther: ").Append(DisclosedMethodOther).Append("\n");
            sb.Append("  DisclosureCreatedDate: ").Append(DisclosureCreatedDate).Append("\n");
            sb.Append("  EDisclosure: ").Append(EDisclosure).Append("\n");
            sb.Append("  Forms: ").Append(Forms).Append("\n");
            sb.Append("  FulfillmentOrderedBy: ").Append(FulfillmentOrderedBy).Append("\n");
            sb.Append("  FulfillmentProcessedDate: ").Append(FulfillmentProcessedDate).Append("\n");
            sb.Append("  LockedDisclosedAPRField: ").Append(LockedDisclosedAPRField).Append("\n");
            sb.Append("  LockedDisclosedByField: ").Append(LockedDisclosedByField).Append("\n");
            sb.Append("  LockedDisclosedFinanceChargeField: ").Append(LockedDisclosedFinanceChargeField).Append("\n");
            sb.Append("  LockedDisclosedReceivedDate: ").Append(LockedDisclosedReceivedDate).Append("\n");
            sb.Append("  ReceivedDate: ").Append(ReceivedDate).Append("\n");
            sb.Append("  DisclosureType: ").Append(DisclosureType).Append("\n");
            sb.Append("  LeReason: ").Append(LeReason).Append("\n");
            sb.Append("  CdReason: ").Append(CdReason).Append("\n");
            sb.Append("  ChangeInCircumstance: ").Append(ChangeInCircumstance).Append("\n");
            sb.Append("  ChangeInCircumstanceComments: ").Append(ChangeInCircumstanceComments).Append("\n");
            sb.Append("  IntentToProceed: ").Append(IntentToProceed).Append("\n");
            sb.Append("  BorrowerDisclosedMethod: ").Append(BorrowerDisclosedMethod).Append("\n");
            sb.Append("  BorrowerDisclosedMethodOther: ").Append(BorrowerDisclosedMethodOther).Append("\n");
            sb.Append("  BorrowerPresumedReceivedDate: ").Append(BorrowerPresumedReceivedDate).Append("\n");
            sb.Append("  BorrowerActualReceivedDate: ").Append(BorrowerActualReceivedDate).Append("\n");
            sb.Append("  CoborrowerDisclosedMethod: ").Append(CoborrowerDisclosedMethod).Append("\n");
            sb.Append("  CoborrowerDisclosedMethodOther: ").Append(CoborrowerDisclosedMethodOther).Append("\n");
            sb.Append("  CoborrowerPresumedReceivedDate: ").Append(CoborrowerPresumedReceivedDate).Append("\n");
            sb.Append("  CoborrowerActualReceivedDate: ").Append(CoborrowerActualReceivedDate).Append("\n");
            sb.Append("  SnapshotFields: ").Append(SnapshotFields).Append("\n");
            sb.Append("  BorrowerType: ").Append(BorrowerType).Append("\n");
            sb.Append("  CoborrowerType: ").Append(CoborrowerType).Append("\n");
            sb.Append("  ApplicationDate: ").Append(ApplicationDate).Append("\n");
            sb.Append("  DisclosedAPR: ").Append(DisclosedAPR).Append("\n");
            sb.Append("  FinanceCharge: ").Append(FinanceCharge).Append("\n");
            sb.Append("  LoanProgram: ").Append(LoanProgram).Append("\n");
            sb.Append("  LoanAmount: ").Append(LoanAmount).Append("\n");
            sb.Append("  PropertyAddress: ").Append(PropertyAddress).Append("\n");
            sb.Append("  DateAdded: ").Append(DateAdded).Append("\n");
            sb.Append("  DisclosedDate: ").Append(DisclosedDate).Append("\n");
            sb.Append("  DisclosureMethod: ").Append(DisclosureMethod).Append("\n");
            sb.Append("  LockedBorrowerPresumedReceivedDate: ").Append(LockedBorrowerPresumedReceivedDate).Append("\n");
            sb.Append("  LockedBorrowerType: ").Append(LockedBorrowerType).Append("\n");
            sb.Append("  LockedCoborrowerPresumedReceivedDate: ").Append(LockedCoborrowerPresumedReceivedDate).Append("\n");
            sb.Append("  LockedCoborrowerType: ").Append(LockedCoborrowerType).Append("\n");
            sb.Append("  DisclosedMethodName: ").Append(DisclosedMethodName).Append("\n");
            sb.Append("  LenderTotalPaidOriginatorAmount: ").Append(LenderTotalPaidOriginatorAmount).Append("\n");
            sb.Append("  LoanPurchaseCredit: ").Append(LoanPurchaseCredit).Append("\n");
            sb.Append("  LoanClosingCost: ").Append(LoanClosingCost).Append("\n");
            sb.Append("  LoanEstimate: ").Append(LoanEstimate).Append("\n");
            sb.Append("  PurchasePriceAmount: ").Append(PurchasePriceAmount).Append("\n");
            sb.Append("  DisclosedSalesPrice: ").Append(DisclosedSalesPrice).Append("\n");
            sb.Append("  LoanFeesCityTaxBorPaidAmount: ").Append(LoanFeesCityTaxBorPaidAmount).Append("\n");
            sb.Append("  LoanFeesStateTaxBorPaidAmount: ").Append(LoanFeesStateTaxBorPaidAmount).Append("\n");
            sb.Append("  LoanGFEAgregateAdjustment: ").Append(LoanGFEAgregateAdjustment).Append("\n");
            sb.Append("  LoanGFEGovernmentRecordingCharges: ").Append(LoanGFEGovernmentRecordingCharges).Append("\n");
            sb.Append("  LoanSection1000SellerPaidTotalAmount: ").Append(LoanSection1000SellerPaidTotalAmount).Append("\n");
            sb.Append("  LoanAdjustmentsOtherCredits: ").Append(LoanAdjustmentsOtherCredits).Append("\n");
            sb.Append("  LoanDownPayment: ").Append(LoanDownPayment).Append("\n");
            sb.Append("  LoanFundsForBorrower: ").Append(LoanFundsForBorrower).Append("\n");
            sb.Append("  LoanLineItemAmount: ").Append(LoanLineItemAmount).Append("\n");
            sb.Append("  LoanRefinanceIncludingDebtsToBePaidOffAmount: ").Append(LoanRefinanceIncludingDebtsToBePaidOffAmount).Append("\n");
            sb.Append("  LoanSellerCreditAmount: ").Append(LoanSellerCreditAmount).Append("\n");
            sb.Append("  LoanTotalClosingCosts: ").Append(LoanTotalClosingCosts).Append("\n");
            sb.Append("  DisclosedDailyInterest: ").Append(DisclosedDailyInterest).Append("\n");
            sb.Append("  AppliedCureAmount: ").Append(AppliedCureAmount).Append("\n");
            sb.Append("  LenderCompensationCreditAmount2: ").Append(LenderCompensationCreditAmount2).Append("\n");
            sb.Append("  Line802LOCompAdditionalAmount1: ").Append(Line802LOCompAdditionalAmount1).Append("\n");
            sb.Append("  Line802LOCompAdditionalAmount2: ").Append(Line802LOCompAdditionalAmount2).Append("\n");
            sb.Append("  ChargesThatCannotDecreaseItemization9: ").Append(ChargesThatCannotDecreaseItemization9).Append("\n");
            sb.Append("  ChargesThatCannotIncreaseItemization13: ").Append(ChargesThatCannotIncreaseItemization13).Append("\n");
            sb.Append("  ChargesCannotIncrease10Itemization34: ").Append(ChargesCannotIncrease10Itemization34).Append("\n");
            sb.Append("  ChargesThatCannotDecreaseLE7: ").Append(ChargesThatCannotDecreaseLE7).Append("\n");
            sb.Append("  ChargesThatCannotIncreaseLE11: ").Append(ChargesThatCannotIncreaseLE11).Append("\n");
            sb.Append("  ChangesReceivedDate: ").Append(ChangesReceivedDate).Append("\n");
            sb.Append("  RevisedDueDate: ").Append(RevisedDueDate).Append("\n");
            sb.Append("  NumberOfDisclosureDocs: ").Append(NumberOfDisclosureDocs).Append("\n");
            sb.Append("  LockedDisclosedDateField: ").Append(LockedDisclosedDateField).Append("\n");
            sb.Append("  LockedIntentReceivedByField: ").Append(LockedIntentReceivedByField).Append("\n");
            sb.Append("  LockedDisclosedDailyInterestField: ").Append(LockedDisclosedDailyInterestField).Append("\n");
            sb.Append("  FulfillmentProcessedDateCoborrower: ").Append(FulfillmentProcessedDateCoborrower).Append("\n");
            sb.Append("  FulfillmentOrderedByCoborrower: ").Append(FulfillmentOrderedByCoborrower).Append("\n");
            sb.Append("  AutomaticFulfillmentServiceName: ").Append(AutomaticFulfillmentServiceName).Append("\n");
            sb.Append("  PresumedFulfillmentDate: ").Append(PresumedFulfillmentDate).Append("\n");
            sb.Append("  ActualFulfillmentDate: ").Append(ActualFulfillmentDate).Append("\n");
            sb.Append("  CureAppliedToLenderCredit: ").Append(CureAppliedToLenderCredit).Append("\n");
            sb.Append("  CureAppliedToPrincipalReduction: ").Append(CureAppliedToPrincipalReduction).Append("\n");
            sb.Append("  UpdatedDateUtc: ").Append(UpdatedDateUtc).Append("\n");
            sb.Append("  EdsRequestGuid: ").Append(EdsRequestGuid).Append("\n");
            sb.Append("  LinkedGuid: ").Append(LinkedGuid).Append("\n");
            sb.Append("  CdDateIssued: ").Append(CdDateIssued).Append("\n");
            sb.Append("  ClosingDate: ").Append(ClosingDate).Append("\n");
            sb.Append("  ActualLELoanAmountFromLatestRec: ").Append(ActualLELoanAmountFromLatestRec).Append("\n");
            sb.Append("  ActualLECD3TotalClosingCostJFromLatestRec: ").Append(ActualLECD3TotalClosingCostJFromLatestRec).Append("\n");
            sb.Append("  ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec: ").Append(ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLETotalClosingCostJFromLatestRec: ").Append(ActualSTDLETotalClosingCostJFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLEClosingCostFinancedFromLatestRec: ").Append(ActualSTDLEClosingCostFinancedFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLEDepositFromLatestRec: ").Append(ActualSTDLEDepositFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLEFundForBorrowerFromLatestRec: ").Append(ActualSTDLEFundForBorrowerFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLESellerCreditsFromLatestRec: ").Append(ActualSTDLESellerCreditsFromLatestRec).Append("\n");
            sb.Append("  ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec: ").Append(ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec).Append("\n");
            sb.Append("  StdAdjustmentAndOtherCreditsRemark: ").Append(StdAdjustmentAndOtherCreditsRemark).Append("\n");
            sb.Append("  LogIndicators: ").Append(LogIndicators).Append("\n");
            sb.Append("  LineIndicators: ").Append(LineIndicators).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as DisclosureTracking2015Contract);
        }

        /// <summary>
        /// Returns true if DisclosureTracking2015Contract instances are equal
        /// </summary>
        /// <param name="input">Instance of DisclosureTracking2015Contract to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DisclosureTracking2015Contract input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Alerts == input.Alerts ||
                    this.Alerts != null &&
                    this.Alerts.SequenceEqual(input.Alerts)
                ) && 
                (
                    this.BorrowerPair == input.BorrowerPair ||
                    (this.BorrowerPair != null &&
                    this.BorrowerPair.Equals(input.BorrowerPair))
                ) && 
                (
                    this.CommentList == input.CommentList ||
                    this.CommentList != null &&
                    this.CommentList.SequenceEqual(input.CommentList)
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.ContainCD == input.ContainCD ||
                    (this.ContainCD != null &&
                    this.ContainCD.Equals(input.ContainCD))
                ) && 
                (
                    this.ContainLE == input.ContainLE ||
                    (this.ContainLE != null &&
                    this.ContainLE.Equals(input.ContainLE))
                ) && 
                (
                    this.DisclosedBy == input.DisclosedBy ||
                    (this.DisclosedBy != null &&
                    this.DisclosedBy.Equals(input.DisclosedBy))
                ) && 
                (
                    this.DisclosedMethod == input.DisclosedMethod ||
                    (this.DisclosedMethod != null &&
                    this.DisclosedMethod.Equals(input.DisclosedMethod))
                ) && 
                (
                    this.DisclosedMethodOther == input.DisclosedMethodOther ||
                    (this.DisclosedMethodOther != null &&
                    this.DisclosedMethodOther.Equals(input.DisclosedMethodOther))
                ) && 
                (
                    this.DisclosureCreatedDate == input.DisclosureCreatedDate ||
                    (this.DisclosureCreatedDate != null &&
                    this.DisclosureCreatedDate.Equals(input.DisclosureCreatedDate))
                ) && 
                (
                    this.EDisclosure == input.EDisclosure ||
                    (this.EDisclosure != null &&
                    this.EDisclosure.Equals(input.EDisclosure))
                ) && 
                (
                    this.Forms == input.Forms ||
                    this.Forms != null &&
                    this.Forms.SequenceEqual(input.Forms)
                ) && 
                (
                    this.FulfillmentOrderedBy == input.FulfillmentOrderedBy ||
                    (this.FulfillmentOrderedBy != null &&
                    this.FulfillmentOrderedBy.Equals(input.FulfillmentOrderedBy))
                ) && 
                (
                    this.FulfillmentProcessedDate == input.FulfillmentProcessedDate ||
                    (this.FulfillmentProcessedDate != null &&
                    this.FulfillmentProcessedDate.Equals(input.FulfillmentProcessedDate))
                ) && 
                (
                    this.LockedDisclosedAPRField == input.LockedDisclosedAPRField ||
                    (this.LockedDisclosedAPRField != null &&
                    this.LockedDisclosedAPRField.Equals(input.LockedDisclosedAPRField))
                ) && 
                (
                    this.LockedDisclosedByField == input.LockedDisclosedByField ||
                    (this.LockedDisclosedByField != null &&
                    this.LockedDisclosedByField.Equals(input.LockedDisclosedByField))
                ) && 
                (
                    this.LockedDisclosedFinanceChargeField == input.LockedDisclosedFinanceChargeField ||
                    (this.LockedDisclosedFinanceChargeField != null &&
                    this.LockedDisclosedFinanceChargeField.Equals(input.LockedDisclosedFinanceChargeField))
                ) && 
                (
                    this.LockedDisclosedReceivedDate == input.LockedDisclosedReceivedDate ||
                    (this.LockedDisclosedReceivedDate != null &&
                    this.LockedDisclosedReceivedDate.Equals(input.LockedDisclosedReceivedDate))
                ) && 
                (
                    this.ReceivedDate == input.ReceivedDate ||
                    (this.ReceivedDate != null &&
                    this.ReceivedDate.Equals(input.ReceivedDate))
                ) && 
                (
                    this.DisclosureType == input.DisclosureType ||
                    (this.DisclosureType != null &&
                    this.DisclosureType.Equals(input.DisclosureType))
                ) && 
                (
                    this.LeReason == input.LeReason ||
                    (this.LeReason != null &&
                    this.LeReason.Equals(input.LeReason))
                ) && 
                (
                    this.CdReason == input.CdReason ||
                    (this.CdReason != null &&
                    this.CdReason.Equals(input.CdReason))
                ) && 
                (
                    this.ChangeInCircumstance == input.ChangeInCircumstance ||
                    (this.ChangeInCircumstance != null &&
                    this.ChangeInCircumstance.Equals(input.ChangeInCircumstance))
                ) && 
                (
                    this.ChangeInCircumstanceComments == input.ChangeInCircumstanceComments ||
                    (this.ChangeInCircumstanceComments != null &&
                    this.ChangeInCircumstanceComments.Equals(input.ChangeInCircumstanceComments))
                ) && 
                (
                    this.IntentToProceed == input.IntentToProceed ||
                    (this.IntentToProceed != null &&
                    this.IntentToProceed.Equals(input.IntentToProceed))
                ) && 
                (
                    this.BorrowerDisclosedMethod == input.BorrowerDisclosedMethod ||
                    (this.BorrowerDisclosedMethod != null &&
                    this.BorrowerDisclosedMethod.Equals(input.BorrowerDisclosedMethod))
                ) && 
                (
                    this.BorrowerDisclosedMethodOther == input.BorrowerDisclosedMethodOther ||
                    (this.BorrowerDisclosedMethodOther != null &&
                    this.BorrowerDisclosedMethodOther.Equals(input.BorrowerDisclosedMethodOther))
                ) && 
                (
                    this.BorrowerPresumedReceivedDate == input.BorrowerPresumedReceivedDate ||
                    (this.BorrowerPresumedReceivedDate != null &&
                    this.BorrowerPresumedReceivedDate.Equals(input.BorrowerPresumedReceivedDate))
                ) && 
                (
                    this.BorrowerActualReceivedDate == input.BorrowerActualReceivedDate ||
                    (this.BorrowerActualReceivedDate != null &&
                    this.BorrowerActualReceivedDate.Equals(input.BorrowerActualReceivedDate))
                ) && 
                (
                    this.CoborrowerDisclosedMethod == input.CoborrowerDisclosedMethod ||
                    (this.CoborrowerDisclosedMethod != null &&
                    this.CoborrowerDisclosedMethod.Equals(input.CoborrowerDisclosedMethod))
                ) && 
                (
                    this.CoborrowerDisclosedMethodOther == input.CoborrowerDisclosedMethodOther ||
                    (this.CoborrowerDisclosedMethodOther != null &&
                    this.CoborrowerDisclosedMethodOther.Equals(input.CoborrowerDisclosedMethodOther))
                ) && 
                (
                    this.CoborrowerPresumedReceivedDate == input.CoborrowerPresumedReceivedDate ||
                    (this.CoborrowerPresumedReceivedDate != null &&
                    this.CoborrowerPresumedReceivedDate.Equals(input.CoborrowerPresumedReceivedDate))
                ) && 
                (
                    this.CoborrowerActualReceivedDate == input.CoborrowerActualReceivedDate ||
                    (this.CoborrowerActualReceivedDate != null &&
                    this.CoborrowerActualReceivedDate.Equals(input.CoborrowerActualReceivedDate))
                ) && 
                (
                    this.SnapshotFields == input.SnapshotFields ||
                    (this.SnapshotFields != null &&
                    this.SnapshotFields.Equals(input.SnapshotFields))
                ) && 
                (
                    this.BorrowerType == input.BorrowerType ||
                    (this.BorrowerType != null &&
                    this.BorrowerType.Equals(input.BorrowerType))
                ) && 
                (
                    this.CoborrowerType == input.CoborrowerType ||
                    (this.CoborrowerType != null &&
                    this.CoborrowerType.Equals(input.CoborrowerType))
                ) && 
                (
                    this.ApplicationDate == input.ApplicationDate ||
                    (this.ApplicationDate != null &&
                    this.ApplicationDate.Equals(input.ApplicationDate))
                ) && 
                (
                    this.DisclosedAPR == input.DisclosedAPR ||
                    (this.DisclosedAPR != null &&
                    this.DisclosedAPR.Equals(input.DisclosedAPR))
                ) && 
                (
                    this.FinanceCharge == input.FinanceCharge ||
                    (this.FinanceCharge != null &&
                    this.FinanceCharge.Equals(input.FinanceCharge))
                ) && 
                (
                    this.LoanProgram == input.LoanProgram ||
                    (this.LoanProgram != null &&
                    this.LoanProgram.Equals(input.LoanProgram))
                ) && 
                (
                    this.LoanAmount == input.LoanAmount ||
                    (this.LoanAmount != null &&
                    this.LoanAmount.Equals(input.LoanAmount))
                ) && 
                (
                    this.PropertyAddress == input.PropertyAddress ||
                    (this.PropertyAddress != null &&
                    this.PropertyAddress.Equals(input.PropertyAddress))
                ) && 
                (
                    this.DateAdded == input.DateAdded ||
                    (this.DateAdded != null &&
                    this.DateAdded.Equals(input.DateAdded))
                ) && 
                (
                    this.DisclosedDate == input.DisclosedDate ||
                    (this.DisclosedDate != null &&
                    this.DisclosedDate.Equals(input.DisclosedDate))
                ) && 
                (
                    this.DisclosureMethod == input.DisclosureMethod ||
                    (this.DisclosureMethod != null &&
                    this.DisclosureMethod.Equals(input.DisclosureMethod))
                ) && 
                (
                    this.LockedBorrowerPresumedReceivedDate == input.LockedBorrowerPresumedReceivedDate ||
                    (this.LockedBorrowerPresumedReceivedDate != null &&
                    this.LockedBorrowerPresumedReceivedDate.Equals(input.LockedBorrowerPresumedReceivedDate))
                ) && 
                (
                    this.LockedBorrowerType == input.LockedBorrowerType ||
                    (this.LockedBorrowerType != null &&
                    this.LockedBorrowerType.Equals(input.LockedBorrowerType))
                ) && 
                (
                    this.LockedCoborrowerPresumedReceivedDate == input.LockedCoborrowerPresumedReceivedDate ||
                    (this.LockedCoborrowerPresumedReceivedDate != null &&
                    this.LockedCoborrowerPresumedReceivedDate.Equals(input.LockedCoborrowerPresumedReceivedDate))
                ) && 
                (
                    this.LockedCoborrowerType == input.LockedCoborrowerType ||
                    (this.LockedCoborrowerType != null &&
                    this.LockedCoborrowerType.Equals(input.LockedCoborrowerType))
                ) && 
                (
                    this.DisclosedMethodName == input.DisclosedMethodName ||
                    (this.DisclosedMethodName != null &&
                    this.DisclosedMethodName.Equals(input.DisclosedMethodName))
                ) && 
                (
                    this.LenderTotalPaidOriginatorAmount == input.LenderTotalPaidOriginatorAmount ||
                    (this.LenderTotalPaidOriginatorAmount != null &&
                    this.LenderTotalPaidOriginatorAmount.Equals(input.LenderTotalPaidOriginatorAmount))
                ) && 
                (
                    this.LoanPurchaseCredit == input.LoanPurchaseCredit ||
                    this.LoanPurchaseCredit != null &&
                    this.LoanPurchaseCredit.SequenceEqual(input.LoanPurchaseCredit)
                ) && 
                (
                    this.LoanClosingCost == input.LoanClosingCost ||
                    (this.LoanClosingCost != null &&
                    this.LoanClosingCost.Equals(input.LoanClosingCost))
                ) && 
                (
                    this.LoanEstimate == input.LoanEstimate ||
                    (this.LoanEstimate != null &&
                    this.LoanEstimate.Equals(input.LoanEstimate))
                ) && 
                (
                    this.PurchasePriceAmount == input.PurchasePriceAmount ||
                    (this.PurchasePriceAmount != null &&
                    this.PurchasePriceAmount.Equals(input.PurchasePriceAmount))
                ) && 
                (
                    this.DisclosedSalesPrice == input.DisclosedSalesPrice ||
                    (this.DisclosedSalesPrice != null &&
                    this.DisclosedSalesPrice.Equals(input.DisclosedSalesPrice))
                ) && 
                (
                    this.LoanFeesCityTaxBorPaidAmount == input.LoanFeesCityTaxBorPaidAmount ||
                    (this.LoanFeesCityTaxBorPaidAmount != null &&
                    this.LoanFeesCityTaxBorPaidAmount.Equals(input.LoanFeesCityTaxBorPaidAmount))
                ) && 
                (
                    this.LoanFeesStateTaxBorPaidAmount == input.LoanFeesStateTaxBorPaidAmount ||
                    (this.LoanFeesStateTaxBorPaidAmount != null &&
                    this.LoanFeesStateTaxBorPaidAmount.Equals(input.LoanFeesStateTaxBorPaidAmount))
                ) && 
                (
                    this.LoanGFEAgregateAdjustment == input.LoanGFEAgregateAdjustment ||
                    (this.LoanGFEAgregateAdjustment != null &&
                    this.LoanGFEAgregateAdjustment.Equals(input.LoanGFEAgregateAdjustment))
                ) && 
                (
                    this.LoanGFEGovernmentRecordingCharges == input.LoanGFEGovernmentRecordingCharges ||
                    (this.LoanGFEGovernmentRecordingCharges != null &&
                    this.LoanGFEGovernmentRecordingCharges.Equals(input.LoanGFEGovernmentRecordingCharges))
                ) && 
                (
                    this.LoanSection1000SellerPaidTotalAmount == input.LoanSection1000SellerPaidTotalAmount ||
                    (this.LoanSection1000SellerPaidTotalAmount != null &&
                    this.LoanSection1000SellerPaidTotalAmount.Equals(input.LoanSection1000SellerPaidTotalAmount))
                ) && 
                (
                    this.LoanAdjustmentsOtherCredits == input.LoanAdjustmentsOtherCredits ||
                    (this.LoanAdjustmentsOtherCredits != null &&
                    this.LoanAdjustmentsOtherCredits.Equals(input.LoanAdjustmentsOtherCredits))
                ) && 
                (
                    this.LoanDownPayment == input.LoanDownPayment ||
                    (this.LoanDownPayment != null &&
                    this.LoanDownPayment.Equals(input.LoanDownPayment))
                ) && 
                (
                    this.LoanFundsForBorrower == input.LoanFundsForBorrower ||
                    (this.LoanFundsForBorrower != null &&
                    this.LoanFundsForBorrower.Equals(input.LoanFundsForBorrower))
                ) && 
                (
                    this.LoanLineItemAmount == input.LoanLineItemAmount ||
                    (this.LoanLineItemAmount != null &&
                    this.LoanLineItemAmount.Equals(input.LoanLineItemAmount))
                ) && 
                (
                    this.LoanRefinanceIncludingDebtsToBePaidOffAmount == input.LoanRefinanceIncludingDebtsToBePaidOffAmount ||
                    (this.LoanRefinanceIncludingDebtsToBePaidOffAmount != null &&
                    this.LoanRefinanceIncludingDebtsToBePaidOffAmount.Equals(input.LoanRefinanceIncludingDebtsToBePaidOffAmount))
                ) && 
                (
                    this.LoanSellerCreditAmount == input.LoanSellerCreditAmount ||
                    (this.LoanSellerCreditAmount != null &&
                    this.LoanSellerCreditAmount.Equals(input.LoanSellerCreditAmount))
                ) && 
                (
                    this.LoanTotalClosingCosts == input.LoanTotalClosingCosts ||
                    (this.LoanTotalClosingCosts != null &&
                    this.LoanTotalClosingCosts.Equals(input.LoanTotalClosingCosts))
                ) && 
                (
                    this.DisclosedDailyInterest == input.DisclosedDailyInterest ||
                    (this.DisclosedDailyInterest != null &&
                    this.DisclosedDailyInterest.Equals(input.DisclosedDailyInterest))
                ) && 
                (
                    this.AppliedCureAmount == input.AppliedCureAmount ||
                    (this.AppliedCureAmount != null &&
                    this.AppliedCureAmount.Equals(input.AppliedCureAmount))
                ) && 
                (
                    this.LenderCompensationCreditAmount2 == input.LenderCompensationCreditAmount2 ||
                    (this.LenderCompensationCreditAmount2 != null &&
                    this.LenderCompensationCreditAmount2.Equals(input.LenderCompensationCreditAmount2))
                ) && 
                (
                    this.Line802LOCompAdditionalAmount1 == input.Line802LOCompAdditionalAmount1 ||
                    (this.Line802LOCompAdditionalAmount1 != null &&
                    this.Line802LOCompAdditionalAmount1.Equals(input.Line802LOCompAdditionalAmount1))
                ) && 
                (
                    this.Line802LOCompAdditionalAmount2 == input.Line802LOCompAdditionalAmount2 ||
                    (this.Line802LOCompAdditionalAmount2 != null &&
                    this.Line802LOCompAdditionalAmount2.Equals(input.Line802LOCompAdditionalAmount2))
                ) && 
                (
                    this.ChargesThatCannotDecreaseItemization9 == input.ChargesThatCannotDecreaseItemization9 ||
                    (this.ChargesThatCannotDecreaseItemization9 != null &&
                    this.ChargesThatCannotDecreaseItemization9.Equals(input.ChargesThatCannotDecreaseItemization9))
                ) && 
                (
                    this.ChargesThatCannotIncreaseItemization13 == input.ChargesThatCannotIncreaseItemization13 ||
                    (this.ChargesThatCannotIncreaseItemization13 != null &&
                    this.ChargesThatCannotIncreaseItemization13.Equals(input.ChargesThatCannotIncreaseItemization13))
                ) && 
                (
                    this.ChargesCannotIncrease10Itemization34 == input.ChargesCannotIncrease10Itemization34 ||
                    (this.ChargesCannotIncrease10Itemization34 != null &&
                    this.ChargesCannotIncrease10Itemization34.Equals(input.ChargesCannotIncrease10Itemization34))
                ) && 
                (
                    this.ChargesThatCannotDecreaseLE7 == input.ChargesThatCannotDecreaseLE7 ||
                    (this.ChargesThatCannotDecreaseLE7 != null &&
                    this.ChargesThatCannotDecreaseLE7.Equals(input.ChargesThatCannotDecreaseLE7))
                ) && 
                (
                    this.ChargesThatCannotIncreaseLE11 == input.ChargesThatCannotIncreaseLE11 ||
                    (this.ChargesThatCannotIncreaseLE11 != null &&
                    this.ChargesThatCannotIncreaseLE11.Equals(input.ChargesThatCannotIncreaseLE11))
                ) && 
                (
                    this.ChangesReceivedDate == input.ChangesReceivedDate ||
                    (this.ChangesReceivedDate != null &&
                    this.ChangesReceivedDate.Equals(input.ChangesReceivedDate))
                ) && 
                (
                    this.RevisedDueDate == input.RevisedDueDate ||
                    (this.RevisedDueDate != null &&
                    this.RevisedDueDate.Equals(input.RevisedDueDate))
                ) && 
                (
                    this.NumberOfDisclosureDocs == input.NumberOfDisclosureDocs ||
                    (this.NumberOfDisclosureDocs != null &&
                    this.NumberOfDisclosureDocs.Equals(input.NumberOfDisclosureDocs))
                ) && 
                (
                    this.LockedDisclosedDateField == input.LockedDisclosedDateField ||
                    (this.LockedDisclosedDateField != null &&
                    this.LockedDisclosedDateField.Equals(input.LockedDisclosedDateField))
                ) && 
                (
                    this.LockedIntentReceivedByField == input.LockedIntentReceivedByField ||
                    (this.LockedIntentReceivedByField != null &&
                    this.LockedIntentReceivedByField.Equals(input.LockedIntentReceivedByField))
                ) && 
                (
                    this.LockedDisclosedDailyInterestField == input.LockedDisclosedDailyInterestField ||
                    (this.LockedDisclosedDailyInterestField != null &&
                    this.LockedDisclosedDailyInterestField.Equals(input.LockedDisclosedDailyInterestField))
                ) && 
                (
                    this.FulfillmentProcessedDateCoborrower == input.FulfillmentProcessedDateCoborrower ||
                    (this.FulfillmentProcessedDateCoborrower != null &&
                    this.FulfillmentProcessedDateCoborrower.Equals(input.FulfillmentProcessedDateCoborrower))
                ) && 
                (
                    this.FulfillmentOrderedByCoborrower == input.FulfillmentOrderedByCoborrower ||
                    (this.FulfillmentOrderedByCoborrower != null &&
                    this.FulfillmentOrderedByCoborrower.Equals(input.FulfillmentOrderedByCoborrower))
                ) && 
                (
                    this.AutomaticFulfillmentServiceName == input.AutomaticFulfillmentServiceName ||
                    (this.AutomaticFulfillmentServiceName != null &&
                    this.AutomaticFulfillmentServiceName.Equals(input.AutomaticFulfillmentServiceName))
                ) && 
                (
                    this.PresumedFulfillmentDate == input.PresumedFulfillmentDate ||
                    (this.PresumedFulfillmentDate != null &&
                    this.PresumedFulfillmentDate.Equals(input.PresumedFulfillmentDate))
                ) && 
                (
                    this.ActualFulfillmentDate == input.ActualFulfillmentDate ||
                    (this.ActualFulfillmentDate != null &&
                    this.ActualFulfillmentDate.Equals(input.ActualFulfillmentDate))
                ) && 
                (
                    this.CureAppliedToLenderCredit == input.CureAppliedToLenderCredit ||
                    (this.CureAppliedToLenderCredit != null &&
                    this.CureAppliedToLenderCredit.Equals(input.CureAppliedToLenderCredit))
                ) && 
                (
                    this.CureAppliedToPrincipalReduction == input.CureAppliedToPrincipalReduction ||
                    (this.CureAppliedToPrincipalReduction != null &&
                    this.CureAppliedToPrincipalReduction.Equals(input.CureAppliedToPrincipalReduction))
                ) && 
                (
                    this.UpdatedDateUtc == input.UpdatedDateUtc ||
                    (this.UpdatedDateUtc != null &&
                    this.UpdatedDateUtc.Equals(input.UpdatedDateUtc))
                ) && 
                (
                    this.EdsRequestGuid == input.EdsRequestGuid ||
                    (this.EdsRequestGuid != null &&
                    this.EdsRequestGuid.Equals(input.EdsRequestGuid))
                ) && 
                (
                    this.LinkedGuid == input.LinkedGuid ||
                    (this.LinkedGuid != null &&
                    this.LinkedGuid.Equals(input.LinkedGuid))
                ) && 
                (
                    this.CdDateIssued == input.CdDateIssued ||
                    (this.CdDateIssued != null &&
                    this.CdDateIssued.Equals(input.CdDateIssued))
                ) && 
                (
                    this.ClosingDate == input.ClosingDate ||
                    (this.ClosingDate != null &&
                    this.ClosingDate.Equals(input.ClosingDate))
                ) && 
                (
                    this.ActualLELoanAmountFromLatestRec == input.ActualLELoanAmountFromLatestRec ||
                    (this.ActualLELoanAmountFromLatestRec != null &&
                    this.ActualLELoanAmountFromLatestRec.Equals(input.ActualLELoanAmountFromLatestRec))
                ) && 
                (
                    this.ActualLECD3TotalClosingCostJFromLatestRec == input.ActualLECD3TotalClosingCostJFromLatestRec ||
                    (this.ActualLECD3TotalClosingCostJFromLatestRec != null &&
                    this.ActualLECD3TotalClosingCostJFromLatestRec.Equals(input.ActualLECD3TotalClosingCostJFromLatestRec))
                ) && 
                (
                    this.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec == input.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec ||
                    (this.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec != null &&
                    this.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec.Equals(input.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec))
                ) && 
                (
                    this.ActualSTDLETotalClosingCostJFromLatestRec == input.ActualSTDLETotalClosingCostJFromLatestRec ||
                    (this.ActualSTDLETotalClosingCostJFromLatestRec != null &&
                    this.ActualSTDLETotalClosingCostJFromLatestRec.Equals(input.ActualSTDLETotalClosingCostJFromLatestRec))
                ) && 
                (
                    this.ActualSTDLEClosingCostFinancedFromLatestRec == input.ActualSTDLEClosingCostFinancedFromLatestRec ||
                    (this.ActualSTDLEClosingCostFinancedFromLatestRec != null &&
                    this.ActualSTDLEClosingCostFinancedFromLatestRec.Equals(input.ActualSTDLEClosingCostFinancedFromLatestRec))
                ) && 
                (
                    this.ActualSTDLEDepositFromLatestRec == input.ActualSTDLEDepositFromLatestRec ||
                    (this.ActualSTDLEDepositFromLatestRec != null &&
                    this.ActualSTDLEDepositFromLatestRec.Equals(input.ActualSTDLEDepositFromLatestRec))
                ) && 
                (
                    this.ActualSTDLEFundForBorrowerFromLatestRec == input.ActualSTDLEFundForBorrowerFromLatestRec ||
                    (this.ActualSTDLEFundForBorrowerFromLatestRec != null &&
                    this.ActualSTDLEFundForBorrowerFromLatestRec.Equals(input.ActualSTDLEFundForBorrowerFromLatestRec))
                ) && 
                (
                    this.ActualSTDLESellerCreditsFromLatestRec == input.ActualSTDLESellerCreditsFromLatestRec ||
                    (this.ActualSTDLESellerCreditsFromLatestRec != null &&
                    this.ActualSTDLESellerCreditsFromLatestRec.Equals(input.ActualSTDLESellerCreditsFromLatestRec))
                ) && 
                (
                    this.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec == input.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec ||
                    (this.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec != null &&
                    this.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec.Equals(input.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec))
                ) && 
                (
                    this.StdAdjustmentAndOtherCreditsRemark == input.StdAdjustmentAndOtherCreditsRemark ||
                    (this.StdAdjustmentAndOtherCreditsRemark != null &&
                    this.StdAdjustmentAndOtherCreditsRemark.Equals(input.StdAdjustmentAndOtherCreditsRemark))
                ) && 
                (
                    this.LogIndicators == input.LogIndicators ||
                    this.LogIndicators != null &&
                    this.LogIndicators.SequenceEqual(input.LogIndicators)
                ) && 
                (
                    this.LineIndicators == input.LineIndicators ||
                    this.LineIndicators != null &&
                    this.LineIndicators.SequenceEqual(input.LineIndicators)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Alerts != null)
                    hashCode = hashCode * 59 + this.Alerts.GetHashCode();
                if (this.BorrowerPair != null)
                    hashCode = hashCode * 59 + this.BorrowerPair.GetHashCode();
                if (this.CommentList != null)
                    hashCode = hashCode * 59 + this.CommentList.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.ContainCD != null)
                    hashCode = hashCode * 59 + this.ContainCD.GetHashCode();
                if (this.ContainLE != null)
                    hashCode = hashCode * 59 + this.ContainLE.GetHashCode();
                if (this.DisclosedBy != null)
                    hashCode = hashCode * 59 + this.DisclosedBy.GetHashCode();
                if (this.DisclosedMethod != null)
                    hashCode = hashCode * 59 + this.DisclosedMethod.GetHashCode();
                if (this.DisclosedMethodOther != null)
                    hashCode = hashCode * 59 + this.DisclosedMethodOther.GetHashCode();
                if (this.DisclosureCreatedDate != null)
                    hashCode = hashCode * 59 + this.DisclosureCreatedDate.GetHashCode();
                if (this.EDisclosure != null)
                    hashCode = hashCode * 59 + this.EDisclosure.GetHashCode();
                if (this.Forms != null)
                    hashCode = hashCode * 59 + this.Forms.GetHashCode();
                if (this.FulfillmentOrderedBy != null)
                    hashCode = hashCode * 59 + this.FulfillmentOrderedBy.GetHashCode();
                if (this.FulfillmentProcessedDate != null)
                    hashCode = hashCode * 59 + this.FulfillmentProcessedDate.GetHashCode();
                if (this.LockedDisclosedAPRField != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedAPRField.GetHashCode();
                if (this.LockedDisclosedByField != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedByField.GetHashCode();
                if (this.LockedDisclosedFinanceChargeField != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedFinanceChargeField.GetHashCode();
                if (this.LockedDisclosedReceivedDate != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedReceivedDate.GetHashCode();
                if (this.ReceivedDate != null)
                    hashCode = hashCode * 59 + this.ReceivedDate.GetHashCode();
                if (this.DisclosureType != null)
                    hashCode = hashCode * 59 + this.DisclosureType.GetHashCode();
                if (this.LeReason != null)
                    hashCode = hashCode * 59 + this.LeReason.GetHashCode();
                if (this.CdReason != null)
                    hashCode = hashCode * 59 + this.CdReason.GetHashCode();
                if (this.ChangeInCircumstance != null)
                    hashCode = hashCode * 59 + this.ChangeInCircumstance.GetHashCode();
                if (this.ChangeInCircumstanceComments != null)
                    hashCode = hashCode * 59 + this.ChangeInCircumstanceComments.GetHashCode();
                if (this.IntentToProceed != null)
                    hashCode = hashCode * 59 + this.IntentToProceed.GetHashCode();
                if (this.BorrowerDisclosedMethod != null)
                    hashCode = hashCode * 59 + this.BorrowerDisclosedMethod.GetHashCode();
                if (this.BorrowerDisclosedMethodOther != null)
                    hashCode = hashCode * 59 + this.BorrowerDisclosedMethodOther.GetHashCode();
                if (this.BorrowerPresumedReceivedDate != null)
                    hashCode = hashCode * 59 + this.BorrowerPresumedReceivedDate.GetHashCode();
                if (this.BorrowerActualReceivedDate != null)
                    hashCode = hashCode * 59 + this.BorrowerActualReceivedDate.GetHashCode();
                if (this.CoborrowerDisclosedMethod != null)
                    hashCode = hashCode * 59 + this.CoborrowerDisclosedMethod.GetHashCode();
                if (this.CoborrowerDisclosedMethodOther != null)
                    hashCode = hashCode * 59 + this.CoborrowerDisclosedMethodOther.GetHashCode();
                if (this.CoborrowerPresumedReceivedDate != null)
                    hashCode = hashCode * 59 + this.CoborrowerPresumedReceivedDate.GetHashCode();
                if (this.CoborrowerActualReceivedDate != null)
                    hashCode = hashCode * 59 + this.CoborrowerActualReceivedDate.GetHashCode();
                if (this.SnapshotFields != null)
                    hashCode = hashCode * 59 + this.SnapshotFields.GetHashCode();
                if (this.BorrowerType != null)
                    hashCode = hashCode * 59 + this.BorrowerType.GetHashCode();
                if (this.CoborrowerType != null)
                    hashCode = hashCode * 59 + this.CoborrowerType.GetHashCode();
                if (this.ApplicationDate != null)
                    hashCode = hashCode * 59 + this.ApplicationDate.GetHashCode();
                if (this.DisclosedAPR != null)
                    hashCode = hashCode * 59 + this.DisclosedAPR.GetHashCode();
                if (this.FinanceCharge != null)
                    hashCode = hashCode * 59 + this.FinanceCharge.GetHashCode();
                if (this.LoanProgram != null)
                    hashCode = hashCode * 59 + this.LoanProgram.GetHashCode();
                if (this.LoanAmount != null)
                    hashCode = hashCode * 59 + this.LoanAmount.GetHashCode();
                if (this.PropertyAddress != null)
                    hashCode = hashCode * 59 + this.PropertyAddress.GetHashCode();
                if (this.DateAdded != null)
                    hashCode = hashCode * 59 + this.DateAdded.GetHashCode();
                if (this.DisclosedDate != null)
                    hashCode = hashCode * 59 + this.DisclosedDate.GetHashCode();
                if (this.DisclosureMethod != null)
                    hashCode = hashCode * 59 + this.DisclosureMethod.GetHashCode();
                if (this.LockedBorrowerPresumedReceivedDate != null)
                    hashCode = hashCode * 59 + this.LockedBorrowerPresumedReceivedDate.GetHashCode();
                if (this.LockedBorrowerType != null)
                    hashCode = hashCode * 59 + this.LockedBorrowerType.GetHashCode();
                if (this.LockedCoborrowerPresumedReceivedDate != null)
                    hashCode = hashCode * 59 + this.LockedCoborrowerPresumedReceivedDate.GetHashCode();
                if (this.LockedCoborrowerType != null)
                    hashCode = hashCode * 59 + this.LockedCoborrowerType.GetHashCode();
                if (this.DisclosedMethodName != null)
                    hashCode = hashCode * 59 + this.DisclosedMethodName.GetHashCode();
                if (this.LenderTotalPaidOriginatorAmount != null)
                    hashCode = hashCode * 59 + this.LenderTotalPaidOriginatorAmount.GetHashCode();
                if (this.LoanPurchaseCredit != null)
                    hashCode = hashCode * 59 + this.LoanPurchaseCredit.GetHashCode();
                if (this.LoanClosingCost != null)
                    hashCode = hashCode * 59 + this.LoanClosingCost.GetHashCode();
                if (this.LoanEstimate != null)
                    hashCode = hashCode * 59 + this.LoanEstimate.GetHashCode();
                if (this.PurchasePriceAmount != null)
                    hashCode = hashCode * 59 + this.PurchasePriceAmount.GetHashCode();
                if (this.DisclosedSalesPrice != null)
                    hashCode = hashCode * 59 + this.DisclosedSalesPrice.GetHashCode();
                if (this.LoanFeesCityTaxBorPaidAmount != null)
                    hashCode = hashCode * 59 + this.LoanFeesCityTaxBorPaidAmount.GetHashCode();
                if (this.LoanFeesStateTaxBorPaidAmount != null)
                    hashCode = hashCode * 59 + this.LoanFeesStateTaxBorPaidAmount.GetHashCode();
                if (this.LoanGFEAgregateAdjustment != null)
                    hashCode = hashCode * 59 + this.LoanGFEAgregateAdjustment.GetHashCode();
                if (this.LoanGFEGovernmentRecordingCharges != null)
                    hashCode = hashCode * 59 + this.LoanGFEGovernmentRecordingCharges.GetHashCode();
                if (this.LoanSection1000SellerPaidTotalAmount != null)
                    hashCode = hashCode * 59 + this.LoanSection1000SellerPaidTotalAmount.GetHashCode();
                if (this.LoanAdjustmentsOtherCredits != null)
                    hashCode = hashCode * 59 + this.LoanAdjustmentsOtherCredits.GetHashCode();
                if (this.LoanDownPayment != null)
                    hashCode = hashCode * 59 + this.LoanDownPayment.GetHashCode();
                if (this.LoanFundsForBorrower != null)
                    hashCode = hashCode * 59 + this.LoanFundsForBorrower.GetHashCode();
                if (this.LoanLineItemAmount != null)
                    hashCode = hashCode * 59 + this.LoanLineItemAmount.GetHashCode();
                if (this.LoanRefinanceIncludingDebtsToBePaidOffAmount != null)
                    hashCode = hashCode * 59 + this.LoanRefinanceIncludingDebtsToBePaidOffAmount.GetHashCode();
                if (this.LoanSellerCreditAmount != null)
                    hashCode = hashCode * 59 + this.LoanSellerCreditAmount.GetHashCode();
                if (this.LoanTotalClosingCosts != null)
                    hashCode = hashCode * 59 + this.LoanTotalClosingCosts.GetHashCode();
                if (this.DisclosedDailyInterest != null)
                    hashCode = hashCode * 59 + this.DisclosedDailyInterest.GetHashCode();
                if (this.AppliedCureAmount != null)
                    hashCode = hashCode * 59 + this.AppliedCureAmount.GetHashCode();
                if (this.LenderCompensationCreditAmount2 != null)
                    hashCode = hashCode * 59 + this.LenderCompensationCreditAmount2.GetHashCode();
                if (this.Line802LOCompAdditionalAmount1 != null)
                    hashCode = hashCode * 59 + this.Line802LOCompAdditionalAmount1.GetHashCode();
                if (this.Line802LOCompAdditionalAmount2 != null)
                    hashCode = hashCode * 59 + this.Line802LOCompAdditionalAmount2.GetHashCode();
                if (this.ChargesThatCannotDecreaseItemization9 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotDecreaseItemization9.GetHashCode();
                if (this.ChargesThatCannotIncreaseItemization13 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotIncreaseItemization13.GetHashCode();
                if (this.ChargesCannotIncrease10Itemization34 != null)
                    hashCode = hashCode * 59 + this.ChargesCannotIncrease10Itemization34.GetHashCode();
                if (this.ChargesThatCannotDecreaseLE7 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotDecreaseLE7.GetHashCode();
                if (this.ChargesThatCannotIncreaseLE11 != null)
                    hashCode = hashCode * 59 + this.ChargesThatCannotIncreaseLE11.GetHashCode();
                if (this.ChangesReceivedDate != null)
                    hashCode = hashCode * 59 + this.ChangesReceivedDate.GetHashCode();
                if (this.RevisedDueDate != null)
                    hashCode = hashCode * 59 + this.RevisedDueDate.GetHashCode();
                if (this.NumberOfDisclosureDocs != null)
                    hashCode = hashCode * 59 + this.NumberOfDisclosureDocs.GetHashCode();
                if (this.LockedDisclosedDateField != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedDateField.GetHashCode();
                if (this.LockedIntentReceivedByField != null)
                    hashCode = hashCode * 59 + this.LockedIntentReceivedByField.GetHashCode();
                if (this.LockedDisclosedDailyInterestField != null)
                    hashCode = hashCode * 59 + this.LockedDisclosedDailyInterestField.GetHashCode();
                if (this.FulfillmentProcessedDateCoborrower != null)
                    hashCode = hashCode * 59 + this.FulfillmentProcessedDateCoborrower.GetHashCode();
                if (this.FulfillmentOrderedByCoborrower != null)
                    hashCode = hashCode * 59 + this.FulfillmentOrderedByCoborrower.GetHashCode();
                if (this.AutomaticFulfillmentServiceName != null)
                    hashCode = hashCode * 59 + this.AutomaticFulfillmentServiceName.GetHashCode();
                if (this.PresumedFulfillmentDate != null)
                    hashCode = hashCode * 59 + this.PresumedFulfillmentDate.GetHashCode();
                if (this.ActualFulfillmentDate != null)
                    hashCode = hashCode * 59 + this.ActualFulfillmentDate.GetHashCode();
                if (this.CureAppliedToLenderCredit != null)
                    hashCode = hashCode * 59 + this.CureAppliedToLenderCredit.GetHashCode();
                if (this.CureAppliedToPrincipalReduction != null)
                    hashCode = hashCode * 59 + this.CureAppliedToPrincipalReduction.GetHashCode();
                if (this.UpdatedDateUtc != null)
                    hashCode = hashCode * 59 + this.UpdatedDateUtc.GetHashCode();
                if (this.EdsRequestGuid != null)
                    hashCode = hashCode * 59 + this.EdsRequestGuid.GetHashCode();
                if (this.LinkedGuid != null)
                    hashCode = hashCode * 59 + this.LinkedGuid.GetHashCode();
                if (this.CdDateIssued != null)
                    hashCode = hashCode * 59 + this.CdDateIssued.GetHashCode();
                if (this.ClosingDate != null)
                    hashCode = hashCode * 59 + this.ClosingDate.GetHashCode();
                if (this.ActualLELoanAmountFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualLELoanAmountFromLatestRec.GetHashCode();
                if (this.ActualLECD3TotalClosingCostJFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualLECD3TotalClosingCostJFromLatestRec.GetHashCode();
                if (this.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualLECD3TotalPayoffsAndPaymentsKFromLatestRec.GetHashCode();
                if (this.ActualSTDLETotalClosingCostJFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLETotalClosingCostJFromLatestRec.GetHashCode();
                if (this.ActualSTDLEClosingCostFinancedFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLEClosingCostFinancedFromLatestRec.GetHashCode();
                if (this.ActualSTDLEDepositFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLEDepositFromLatestRec.GetHashCode();
                if (this.ActualSTDLEFundForBorrowerFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLEFundForBorrowerFromLatestRec.GetHashCode();
                if (this.ActualSTDLESellerCreditsFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLESellerCreditsFromLatestRec.GetHashCode();
                if (this.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec != null)
                    hashCode = hashCode * 59 + this.ActualSTDLEAdjustmentAndOtherCreditsFromLatestRec.GetHashCode();
                if (this.StdAdjustmentAndOtherCreditsRemark != null)
                    hashCode = hashCode * 59 + this.StdAdjustmentAndOtherCreditsRemark.GetHashCode();
                if (this.LogIndicators != null)
                    hashCode = hashCode * 59 + this.LogIndicators.GetHashCode();
                if (this.LineIndicators != null)
                    hashCode = hashCode * 59 + this.LineIndicators.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
