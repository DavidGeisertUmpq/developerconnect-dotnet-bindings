/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/


/* 
 * Settings
 *
 * Represents settings operations on Company, Loan, Contact etc.
 *
 * OpenAPI spec version: 1.4.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Elli.Api.Settings.Client.SwaggerDateConverter;

namespace Elli.Api.Settings.Model
{
    /// <summary>
    /// UserContract
    /// </summary>
    [DataContract]
    public partial class UserContract :  IEquatable<UserContract>, IValidatableObject
    {
    
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name="fullName", EmitDefaultValue=false)]
        public string FullName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets CellPhone
        /// </summary>
        [DataMember(Name="cellPhone", EmitDefaultValue=false)]
        public string CellPhone { get; set; }

        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }

        /// <summary>
        /// Gets or Sets EmployeeID
        /// </summary>
        [DataMember(Name="employeeID", EmitDefaultValue=false)]
        public string EmployeeID { get; set; }

        /// <summary>
        /// Gets or Sets ApiUser
        /// </summary>
        [DataMember(Name="apiUser", EmitDefaultValue=false)]
        public bool? ApiUser { get; set; }

        /// <summary>
        /// Gets or Sets OAuthClientId
        /// </summary>
        [DataMember(Name="oAuthClientId", EmitDefaultValue=false)]
        public string OAuthClientId { get; set; }

        /// <summary>
        /// Gets or Sets WorkingFolder
        /// </summary>
        [DataMember(Name="workingFolder", EmitDefaultValue=false)]
        public string WorkingFolder { get; set; }

        /// <summary>
        /// Gets or Sets Organization
        /// </summary>
        [DataMember(Name="organization", EmitDefaultValue=false)]
        public EntityRefContract Organization { get; set; }

        /// <summary>
        /// Gets or Sets SubordinateLoanAccess
        /// </summary>
        [DataMember(Name="subordinateLoanAccess", EmitDefaultValue=false)]
        public string SubordinateLoanAccess { get; set; }

        /// <summary>
        /// Gets or Sets UserIndicators
        /// </summary>
        [DataMember(Name="userIndicators", EmitDefaultValue=false)]
        public List<string> UserIndicators { get; set; }

        /// <summary>
        /// Gets or Sets PeerLoanAccess
        /// </summary>
        [DataMember(Name="peerLoanAccess", EmitDefaultValue=false)]
        public string PeerLoanAccess { get; set; }

        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [DataMember(Name="lastLogin", EmitDefaultValue=false)]
        public DateTime? LastLogin { get; set; }

        /// <summary>
        /// Gets or Sets EncompassVersion
        /// </summary>
        [DataMember(Name="encompassVersion", EmitDefaultValue=false)]
        public string EncompassVersion { get; set; }

        /// <summary>
        /// Gets or Sets ChumID
        /// </summary>
        [DataMember(Name="chumID", EmitDefaultValue=false)]
        public string ChumID { get; set; }

        /// <summary>
        /// Gets or Sets NmlsOriginatorID
        /// </summary>
        [DataMember(Name="nmlsOriginatorID", EmitDefaultValue=false)]
        public string NmlsOriginatorID { get; set; }

        /// <summary>
        /// Gets or Sets NmlsExpirationDate
        /// </summary>
        [DataMember(Name="nmlsExpirationDate", EmitDefaultValue=false)]
        public string NmlsExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets EmailSignature
        /// </summary>
        [DataMember(Name="emailSignature", EmitDefaultValue=false)]
        public string EmailSignature { get; set; }

        /// <summary>
        /// Gets or Sets PersonalStatusOnline
        /// </summary>
        [DataMember(Name="personalStatusOnline", EmitDefaultValue=false)]
        public bool? PersonalStatusOnline { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Comments
        /// </summary>
        [DataMember(Name="comments", EmitDefaultValue=false)]
        public string Comments { get; set; }

        /// <summary>
        /// Gets or Sets Personas
        /// </summary>
        [DataMember(Name="personas", EmitDefaultValue=false)]
        public List<EntityRefContract> Personas { get; set; }

        /// <summary>
        /// Gets or Sets CcSite
        /// </summary>
        [DataMember(Name="ccSite", EmitDefaultValue=false)]
        public UserContractCcSite CcSite { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserContract {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  CellPhone: ").Append(CellPhone).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  EmployeeID: ").Append(EmployeeID).Append("\n");
            sb.Append("  ApiUser: ").Append(ApiUser).Append("\n");
            sb.Append("  OAuthClientId: ").Append(OAuthClientId).Append("\n");
            sb.Append("  WorkingFolder: ").Append(WorkingFolder).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  SubordinateLoanAccess: ").Append(SubordinateLoanAccess).Append("\n");
            sb.Append("  UserIndicators: ").Append(UserIndicators).Append("\n");
            sb.Append("  PeerLoanAccess: ").Append(PeerLoanAccess).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  EncompassVersion: ").Append(EncompassVersion).Append("\n");
            sb.Append("  ChumID: ").Append(ChumID).Append("\n");
            sb.Append("  NmlsOriginatorID: ").Append(NmlsOriginatorID).Append("\n");
            sb.Append("  NmlsExpirationDate: ").Append(NmlsExpirationDate).Append("\n");
            sb.Append("  EmailSignature: ").Append(EmailSignature).Append("\n");
            sb.Append("  PersonalStatusOnline: ").Append(PersonalStatusOnline).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Comments: ").Append(Comments).Append("\n");
            sb.Append("  Personas: ").Append(Personas).Append("\n");
            sb.Append("  CcSite: ").Append(CcSite).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserContract);
        }

        /// <summary>
        /// Returns true if UserContract instances are equal
        /// </summary>
        /// <param name="input">Instance of UserContract to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserContract input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.FullName == input.FullName ||
                    (this.FullName != null &&
                    this.FullName.Equals(input.FullName))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.CellPhone == input.CellPhone ||
                    (this.CellPhone != null &&
                    this.CellPhone.Equals(input.CellPhone))
                ) && 
                (
                    this.Fax == input.Fax ||
                    (this.Fax != null &&
                    this.Fax.Equals(input.Fax))
                ) && 
                (
                    this.EmployeeID == input.EmployeeID ||
                    (this.EmployeeID != null &&
                    this.EmployeeID.Equals(input.EmployeeID))
                ) && 
                (
                    this.ApiUser == input.ApiUser ||
                    (this.ApiUser != null &&
                    this.ApiUser.Equals(input.ApiUser))
                ) && 
                (
                    this.OAuthClientId == input.OAuthClientId ||
                    (this.OAuthClientId != null &&
                    this.OAuthClientId.Equals(input.OAuthClientId))
                ) && 
                (
                    this.WorkingFolder == input.WorkingFolder ||
                    (this.WorkingFolder != null &&
                    this.WorkingFolder.Equals(input.WorkingFolder))
                ) && 
                (
                    this.Organization == input.Organization ||
                    (this.Organization != null &&
                    this.Organization.Equals(input.Organization))
                ) && 
                (
                    this.SubordinateLoanAccess == input.SubordinateLoanAccess ||
                    (this.SubordinateLoanAccess != null &&
                    this.SubordinateLoanAccess.Equals(input.SubordinateLoanAccess))
                ) && 
                (
                    this.UserIndicators == input.UserIndicators ||
                    this.UserIndicators != null &&
                    this.UserIndicators.SequenceEqual(input.UserIndicators)
                ) && 
                (
                    this.PeerLoanAccess == input.PeerLoanAccess ||
                    (this.PeerLoanAccess != null &&
                    this.PeerLoanAccess.Equals(input.PeerLoanAccess))
                ) && 
                (
                    this.LastLogin == input.LastLogin ||
                    (this.LastLogin != null &&
                    this.LastLogin.Equals(input.LastLogin))
                ) && 
                (
                    this.EncompassVersion == input.EncompassVersion ||
                    (this.EncompassVersion != null &&
                    this.EncompassVersion.Equals(input.EncompassVersion))
                ) && 
                (
                    this.ChumID == input.ChumID ||
                    (this.ChumID != null &&
                    this.ChumID.Equals(input.ChumID))
                ) && 
                (
                    this.NmlsOriginatorID == input.NmlsOriginatorID ||
                    (this.NmlsOriginatorID != null &&
                    this.NmlsOriginatorID.Equals(input.NmlsOriginatorID))
                ) && 
                (
                    this.NmlsExpirationDate == input.NmlsExpirationDate ||
                    (this.NmlsExpirationDate != null &&
                    this.NmlsExpirationDate.Equals(input.NmlsExpirationDate))
                ) && 
                (
                    this.EmailSignature == input.EmailSignature ||
                    (this.EmailSignature != null &&
                    this.EmailSignature.Equals(input.EmailSignature))
                ) && 
                (
                    this.PersonalStatusOnline == input.PersonalStatusOnline ||
                    (this.PersonalStatusOnline != null &&
                    this.PersonalStatusOnline.Equals(input.PersonalStatusOnline))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Comments == input.Comments ||
                    (this.Comments != null &&
                    this.Comments.Equals(input.Comments))
                ) && 
                (
                    this.Personas == input.Personas ||
                    this.Personas != null &&
                    this.Personas.SequenceEqual(input.Personas)
                ) && 
                (
                    this.CcSite == input.CcSite ||
                    (this.CcSite != null &&
                    this.CcSite.Equals(input.CcSite))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.FullName != null)
                    hashCode = hashCode * 59 + this.FullName.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Phone != null)
                    hashCode = hashCode * 59 + this.Phone.GetHashCode();
                if (this.CellPhone != null)
                    hashCode = hashCode * 59 + this.CellPhone.GetHashCode();
                if (this.Fax != null)
                    hashCode = hashCode * 59 + this.Fax.GetHashCode();
                if (this.EmployeeID != null)
                    hashCode = hashCode * 59 + this.EmployeeID.GetHashCode();
                if (this.ApiUser != null)
                    hashCode = hashCode * 59 + this.ApiUser.GetHashCode();
                if (this.OAuthClientId != null)
                    hashCode = hashCode * 59 + this.OAuthClientId.GetHashCode();
                if (this.WorkingFolder != null)
                    hashCode = hashCode * 59 + this.WorkingFolder.GetHashCode();
                if (this.Organization != null)
                    hashCode = hashCode * 59 + this.Organization.GetHashCode();
                if (this.SubordinateLoanAccess != null)
                    hashCode = hashCode * 59 + this.SubordinateLoanAccess.GetHashCode();
                if (this.UserIndicators != null)
                    hashCode = hashCode * 59 + this.UserIndicators.GetHashCode();
                if (this.PeerLoanAccess != null)
                    hashCode = hashCode * 59 + this.PeerLoanAccess.GetHashCode();
                if (this.LastLogin != null)
                    hashCode = hashCode * 59 + this.LastLogin.GetHashCode();
                if (this.EncompassVersion != null)
                    hashCode = hashCode * 59 + this.EncompassVersion.GetHashCode();
                if (this.ChumID != null)
                    hashCode = hashCode * 59 + this.ChumID.GetHashCode();
                if (this.NmlsOriginatorID != null)
                    hashCode = hashCode * 59 + this.NmlsOriginatorID.GetHashCode();
                if (this.NmlsExpirationDate != null)
                    hashCode = hashCode * 59 + this.NmlsExpirationDate.GetHashCode();
                if (this.EmailSignature != null)
                    hashCode = hashCode * 59 + this.EmailSignature.GetHashCode();
                if (this.PersonalStatusOnline != null)
                    hashCode = hashCode * 59 + this.PersonalStatusOnline.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Comments != null)
                    hashCode = hashCode * 59 + this.Comments.GetHashCode();
                if (this.Personas != null)
                    hashCode = hashCode * 59 + this.Personas.GetHashCode();
                if (this.CcSite != null)
                    hashCode = hashCode * 59 + this.CcSite.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
