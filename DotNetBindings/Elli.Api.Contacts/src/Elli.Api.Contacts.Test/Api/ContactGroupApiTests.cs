/*
* Copyright 2017 Ellie Mae, Inc.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*  1. Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2. Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3. Neither the name of the copyright holder nor the names of its
*     contributors may be used to endorse or promote products derived from this
*     software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/

/* 
 * Contacts
 *
 * Represents borrower and business contacts
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Elli.Api.Contacts.Client;
using Elli.Api.Contacts.Api;
using Elli.Api.Contacts.Model;

namespace Elli.Api.Contacts.Test
{
    /// <summary>
    ///  Class for testing ContactGroupApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ContactGroupApiTests
    {
        private ContactGroupApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ContactGroupApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContactGroupApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ContactGroupApi
            //Assert.IsInstanceOfType(typeof(ContactGroupApi), instance, "instance is a ContactGroupApi");
        }

        
        /// <summary>
        /// Test CreateContactGroup
        /// </summary>
        [Test]
        public void CreateContactGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ContactGroupContract contactGroupContract = null;
            //var response = instance.CreateContactGroup(contactGroupContract);
            //Assert.IsInstanceOf<ContactGroupContract> (response, "response is ContactGroupContract");
        }
        
        /// <summary>
        /// Test DeleteContactGroup
        /// </summary>
        [Test]
        public void DeleteContactGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //instance.DeleteContactGroup(groupId);
            
        }
        
        /// <summary>
        /// Test GetContactGroup
        /// </summary>
        [Test]
        public void GetContactGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //var response = instance.GetContactGroup(groupId);
            //Assert.IsInstanceOf<ContactGroupContract> (response, "response is ContactGroupContract");
        }
        
        /// <summary>
        /// Test GetContactGroups
        /// </summary>
        [Test]
        public void GetContactGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string contactType = null;
            //string groupType = null;
            //var response = instance.GetContactGroups(contactType, groupType);
            //Assert.IsInstanceOf<List<ContactGroupContract>> (response, "response is List<ContactGroupContract>");
        }
        
        /// <summary>
        /// Test GetContactsOfGroup
        /// </summary>
        [Test]
        public void GetContactsOfGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string start = null;
            //string limit = null;
            //var response = instance.GetContactsOfGroup(groupId, start, limit);
            //Assert.IsInstanceOf<List<EntityRefContract>> (response, "response is List<EntityRefContract>");
        }
        
        /// <summary>
        /// Test UpdateContactGroup
        /// </summary>
        [Test]
        public void UpdateContactGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //ContactGroupContract contactGroupContract = null;
            //instance.UpdateContactGroup(groupId, contactGroupContract);
            
        }
        
        /// <summary>
        /// Test UpdateContactsOfGroup
        /// </summary>
        [Test]
        public void UpdateContactsOfGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string action = null;
            //List<EntityRefContract> entityRefContract = null;
            //instance.UpdateContactsOfGroup(groupId, action, entityRefContract);
            
        }
        
    }

}
